{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\dev\\\\GitHub\\\\goit-react-hw-05-phonebook\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport ContactList from \"../ContactList\";\nimport PhonebookForm from \"../PhonebookForm\";\nimport Filter from \"../Filter\";\nimport Logo from \"../Logo\";\nimport { CSSTransition } from \"react-transition-group\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [{\n        id: \"id-1\",\n        name: \"Rosie Simpson\",\n        number: \"459-12-56\"\n      }, {\n        id: \"id-2\",\n        name: \"Hermione Kline\",\n        number: \"443-89-12\"\n      }, {\n        id: \"id-3\",\n        name: \"Eden Clements\",\n        number: \"645-17-79\"\n      }, {\n        id: \"id-4\",\n        name: \"Annie Copeland\",\n        number: \"227-91-26\"\n      }],\n      filter: \"\",\n      filterNeeded: false,\n      name: \"\",\n      number: \"\",\n      showNotification: false\n    };\n\n    this.onAddContact = newContact => {\n      const sameContact = this.state.contacts.find(contact => contact.name === newContact.name);\n\n      if (sameContact) {\n        this.setState({\n          showNotification: true\n        });\n        setTimeout(() => this.setState({\n          showNotification: false\n        }), 1500);\n      } else {\n        this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, newContact]\n          };\n        });\n      }\n    };\n\n    this.onRemoveContact = contactId => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(({\n            id\n          }) => id !== contactId)\n        };\n      });\n    };\n\n    this.onChangeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: true,\n        appear: true,\n        timeout: 500,\n        classNames: \"Logo-slideIn\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PhonebookForm, {\n        onAddContact: this.onAddContact,\n        notification: this.state.showNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: this.state.contacts.length > 1,\n        classNames: this.state.isMounted ? 'filter-appear' : 'filter',\n        timeout: 500,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          value: this.state.filter,\n          onChangeFilter: this.onChangeFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filteredContacts,\n        onRemoveContact: this.onRemoveContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App; // render() {\n//   const filteredContacts = this.state.contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(this.state.filter)\n//   )\n//   return (\n//     <>\n//     <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n//       <Logo />\n//       </CSSTransition>\n//       <PhonebookForm onAddContact={this.onAddContact}   notification={this.state.showNotification} />\n//       {this.state.contacts.length > 1 && (\n//         <Filter\n//           value={this.state.filter}\n//           onChangeFilter={this.onChangeFilter}\n//         />\n//       )}\n//       {this.state.contacts.length > 0 && (\n//         <ContactList\n//           contacts={filteredContacts}\n//           onRemoveContact={this.onRemoveContact}\n//         />\n//       )}\n//     </>\n//   )\n// }","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-05-phonebook/src/components/App/App.jsx"],"names":["React","Component","ContactList","PhonebookForm","Filter","Logo","CSSTransition","App","state","contacts","id","name","number","filter","filterNeeded","showNotification","onAddContact","newContact","sameContact","find","contact","setState","setTimeout","prevState","onRemoveContact","contactId","onChangeFilter","componentDidMount","persistedContacts","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","filteredContacts","toLowerCase","includes","length","isMounted"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport ContactList from \"../ContactList\"\nimport PhonebookForm from \"../PhonebookForm\"\nimport Filter from \"../Filter\"\nimport Logo from \"../Logo\"\nimport { CSSTransition } from \"react-transition-group\"\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    filterNeeded: false,\n    name: \"\",\n    number: \"\",\n    showNotification: false\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\")\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      })\n    }\n    \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n    }\n  }\n\n  onAddContact = (newContact) => {\n    const sameContact = this.state.contacts.find(\n      (contact) => contact.name === newContact.name\n    )\n    if (sameContact) {\n      this.setState({ showNotification: true });\n      setTimeout(() => this.setState({ showNotification: false }), 1500);\n    } else {\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, newContact],\n        }\n      })\n    }\n  }\n\n  onRemoveContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      }\n    })\n  }\n\n  onChangeFilter = (filter) => {\n    this.setState({ filter })\n  }\n\n  render() {\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter)\n    )\n    return (\n      <>\n      <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n        <Logo />\n        </CSSTransition>\n\n        <PhonebookForm onAddContact={this.onAddContact}   notification={this.state.showNotification} />\n\n        <CSSTransition \n        in={this.state.contacts.length > 1}\n        classNames={this.state.isMounted ? 'filter-appear' : 'filter'}\n        timeout={500}\n        unmountOnExit>\n          <Filter\n            value={this.state.filter}\n            onChangeFilter={this.onChangeFilter}\n          />\n       \n</CSSTransition>\n        \n          <ContactList\n            contacts={filteredContacts}\n            onRemoveContact={this.onRemoveContact}\n          />\n        \n      </>\n    )\n  }\n}\n\nexport default App\n\n\n\n// render() {\n//   const filteredContacts = this.state.contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(this.state.filter)\n//   )\n//   return (\n//     <>\n//     <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n//       <Logo />\n//       </CSSTransition>\n\n//       <PhonebookForm onAddContact={this.onAddContact}   notification={this.state.showNotification} />\n\n//       {this.state.contacts.length > 1 && (\n//         <Filter\n//           value={this.state.filter}\n//           onChangeFilter={this.onChangeFilter}\n//         />\n//       )}\n\n//       {this.state.contacts.length > 0 && (\n//         <ContactList\n//           contacts={filteredContacts}\n//           onRemoveContact={this.onRemoveContact}\n//         />\n//       )}\n//     </>\n//   )\n// }"]},"metadata":{},"sourceType":"module"}