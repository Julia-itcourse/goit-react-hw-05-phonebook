{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\dev\\\\GitHub\\\\goit-react-hw-05-phonebook\\\\src\\\\components\\\\App\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport ContactList from \"../ContactList\";\nimport PhonebookForm from \"../PhonebookForm\";\nimport Filter from \"../Filter\";\nimport Logo from \"../Logo\";\nimport { CSSTransition } from \"react-transition-group\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [{\n        id: \"id-1\",\n        name: \"Rosie Simpson\",\n        number: \"459-12-56\"\n      }, {\n        id: \"id-2\",\n        name: \"Hermione Kline\",\n        number: \"443-89-12\"\n      }, {\n        id: \"id-3\",\n        name: \"Eden Clements\",\n        number: \"645-17-79\"\n      }, {\n        id: \"id-4\",\n        name: \"Annie Copeland\",\n        number: \"227-91-26\"\n      }],\n      filter: \"\",\n      name: \"\",\n      number: \"\",\n      error: \"false\",\n      showAlert: \"false\"\n    };\n\n    this.onAddContact = newContact => {\n      const sameContact = this.state.contacts.find(contact => contact.name === newContact.name); // ? alert(`${newContact.name} is already in the phonebook!`)\n\n      if (sameContact) {\n        this.setState({\n          showAlert: true\n        });\n      } else {\n        this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, newContact]\n          };\n        });\n      }\n    };\n\n    this.onRemoveContact = contactId => {\n      this.setState(prevState => {\n        return {\n          contacts: prevState.contacts.filter(({\n            id\n          }) => id !== contactId)\n        };\n      });\n    };\n\n    this.onChangeFilter = filter => {\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts)\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: true,\n        appear: true,\n        timeout: 500,\n        classNames: \"Logo-slideIn\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PhonebookForm, {\n        onAddContact: this.onAddContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), this.state.contacts.length > 1 && /*#__PURE__*/_jsxDEV(Filter, {\n        value: this.state.filter,\n        onChangeFilter: this.onChangeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), this.state.contacts.length > 0 && /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filteredContacts,\n        onRemoveContact: this.onRemoveContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/dev/GitHub/goit-react-hw-05-phonebook/src/components/App/App.jsx"],"names":["React","Component","ContactList","PhonebookForm","Filter","Logo","CSSTransition","App","state","contacts","id","name","number","filter","error","showAlert","onAddContact","newContact","sameContact","find","contact","setState","prevState","onRemoveContact","contactId","onChangeFilter","componentDidMount","persistedContacts","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","filteredContacts","toLowerCase","includes","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport ContactList from \"../ContactList\"\nimport PhonebookForm from \"../PhonebookForm\"\nimport Filter from \"../Filter\"\nimport Logo from \"../Logo\"\nimport { CSSTransition } from \"react-transition-group\"\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n    error: \"false\",\n    showAlert: \"false\"\n  }\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\")\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n    }\n  }\n\n  onAddContact = (newContact) => {\n    const sameContact = this.state.contacts.find(\n      (contact) => contact.name === newContact.name\n    )\n    // ? alert(`${newContact.name} is already in the phonebook!`)\n    if (sameContact) {\n      this.setState({ showAlert: true });\n      \n    } else {\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, newContact],\n        }\n      })\n    }\n  }\n\n  onRemoveContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      }\n    })\n  }\n\n  onChangeFilter = (filter) => {\n    this.setState({ filter })\n  }\n\n  render() {\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(this.state.filter)\n    )\n    return (\n      <>\n      <CSSTransition in={true} appear = {true} timeout = {500} classNames = \"Logo-slideIn\">\n        <Logo />\n        </CSSTransition>\n\n        <PhonebookForm onAddContact={this.onAddContact} />\n\n        {this.state.contacts.length > 1 && (\n          <Filter\n            value={this.state.filter}\n            onChangeFilter={this.onChangeFilter}\n          />\n        )}\n\n        {this.state.contacts.length > 0 && (\n          <ContactList\n            contacts={filteredContacts}\n            onRemoveContact={this.onRemoveContact}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}